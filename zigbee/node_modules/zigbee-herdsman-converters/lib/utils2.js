"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.assertEndpoint = exports.getFromLookup = exports.assertNumber = exports.assertString = void 0;
function assertString(value, property) {
    if (typeof value !== 'string')
        throw new Error(`'${property}' is not a string, got ${typeof value} (${value.toString()})`);
}
exports.assertString = assertString;
function assertNumber(value, property) {
    if (typeof value !== 'number')
        throw new Error(`'${property}' is not a number, got ${typeof value} (${value.toString()})`);
}
exports.assertNumber = assertNumber;
function getFromLookup(value, lookup) {
    var _a;
    let result = undefined;
    if (typeof value === 'string') {
        result = (_a = lookup[value.toLowerCase()]) !== null && _a !== void 0 ? _a : lookup[value.toUpperCase()];
    }
    else if (typeof value === 'number') {
        result = lookup[value];
    }
    if (result === undefined)
        throw new Error(`Expected one of: ${Object.keys(lookup).join(', ')}, got: '${value}'`);
    return result;
}
exports.getFromLookup = getFromLookup;
function assertEndpoint(obj) {
    var _a, _b;
    if (((_b = (_a = obj === null || obj === void 0 ? void 0 : obj.constructor) === null || _a === void 0 ? void 0 : _a.name) === null || _b === void 0 ? void 0 : _b.toLowerCase()) !== 'endpoint')
        throw new Error('Not an endpoint');
}
exports.assertEndpoint = assertEndpoint;
//# sourceMappingURL=utils2.js.map